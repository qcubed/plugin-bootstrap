<?php

namespace QCubed\Plugin\Bootstrap;

/**
 * If you are compiling your own bootstrap css file, point to it with the __BOOTSTRAP_CSS__ define. Otherwise it will take
 * the default one from the bootstrap distribution.
 */
if (!defined ('__BOOTSTRAP_CSS__')) {
	define ('__BOOTSTRAP_CSS__', __VENDOR_ASSETS__. '/twbs/bootstrap/dist/css/bootstrap.min.css');
}

/**
 * Define __BOOTSTRAP_JS__ to handle your own loading of the bootstrap js files. Bootstrap includes a minimized version
 * and a non-minimized version.
 */
if (!defined ('__BOOTSTRAP_JS__')) {
	define ('__BOOTSTRAP_JS__', __VENDOR_ASSETS__. '/twbs/bootstrap/dist/js/bootstrap.min.js');
}


abstract class Bootstrap {
	/** Generated by GlyphiconGen.php */
	const GlyphiconAsterisk = "glyphicon-asterisk";
	const GlyphiconPlus = "glyphicon-plus";
	const GlyphiconEuro = "glyphicon-euro";
	const GlyphiconMinus = "glyphicon-minus";
	const GlyphiconCloud = "glyphicon-cloud";
	const GlyphiconEnvelope = "glyphicon-envelope";
	const GlyphiconPencil = "glyphicon-pencil";
	const GlyphiconGlass = "glyphicon-glass";
	const GlyphiconMusic = "glyphicon-music";
	const GlyphiconSearch = "glyphicon-search";
	const GlyphiconHeart = "glyphicon-heart";
	const GlyphiconStar = "glyphicon-star";
	const GlyphiconStarEmpty = "glyphicon-star-empty";
	const GlyphiconUser = "glyphicon-user";
	const GlyphiconFilm = "glyphicon-film";
	const GlyphiconThLarge = "glyphicon-th-large";
	const GlyphiconTh = "glyphicon-th";
	const GlyphiconThList = "glyphicon-th-list";
	const GlyphiconOk = "glyphicon-ok";
	const GlyphiconRemove = "glyphicon-remove";
	const GlyphiconZoomIn = "glyphicon-zoom-in";
	const GlyphiconZoomOut = "glyphicon-zoom-out";
	const GlyphiconOff = "glyphicon-off";
	const GlyphiconSignal = "glyphicon-signal";
	const GlyphiconCog = "glyphicon-cog";
	const GlyphiconTrash = "glyphicon-trash";
	const GlyphiconHome = "glyphicon-home";
	const GlyphiconFile = "glyphicon-file";
	const GlyphiconTime = "glyphicon-time";
	const GlyphiconRoad = "glyphicon-road";
	const GlyphiconDownloadAlt = "glyphicon-download-alt";
	const GlyphiconDownload = "glyphicon-download";
	const GlyphiconUpload = "glyphicon-upload";
	const GlyphiconInbox = "glyphicon-inbox";
	const GlyphiconPlayCircle = "glyphicon-play-circle";
	const GlyphiconRepeat = "glyphicon-repeat";
	const GlyphiconRefresh = "glyphicon-refresh";
	const GlyphiconListAlt = "glyphicon-list-alt";
	const GlyphiconLock = "glyphicon-lock";
	const GlyphiconFlag = "glyphicon-flag";
	const GlyphiconHeadphones = "glyphicon-headphones";
	const GlyphiconVolumeOff = "glyphicon-volume-off";
	const GlyphiconVolumeDown = "glyphicon-volume-down";
	const GlyphiconVolumeUp = "glyphicon-volume-up";
	const GlyphiconQrcode = "glyphicon-qrcode";
	const GlyphiconBarcode = "glyphicon-barcode";
	const GlyphiconTag = "glyphicon-tag";
	const GlyphiconTags = "glyphicon-tags";
	const GlyphiconBook = "glyphicon-book";
	const GlyphiconBookmark = "glyphicon-bookmark";
	const GlyphiconPrint = "glyphicon-print";
	const GlyphiconCamera = "glyphicon-camera";
	const GlyphiconFont = "glyphicon-font";
	const GlyphiconBold = "glyphicon-bold";
	const GlyphiconItalic = "glyphicon-italic";
	const GlyphiconTextHeight = "glyphicon-text-height";
	const GlyphiconTextWidth = "glyphicon-text-width";
	const GlyphiconAlignLeft = "glyphicon-align-left";
	const GlyphiconAlignCenter = "glyphicon-align-center";
	const GlyphiconAlignRight = "glyphicon-align-right";
	const GlyphiconAlignJustify = "glyphicon-align-justify";
	const GlyphiconList = "glyphicon-list";
	const GlyphiconIndentLeft = "glyphicon-indent-left";
	const GlyphiconIndentRight = "glyphicon-indent-right";
	const GlyphiconFacetimeVideo = "glyphicon-facetime-video";
	const GlyphiconPicture = "glyphicon-picture";
	const GlyphiconMapMarker = "glyphicon-map-marker";
	const GlyphiconAdjust = "glyphicon-adjust";
	const GlyphiconTint = "glyphicon-tint";
	const GlyphiconEdit = "glyphicon-edit";
	const GlyphiconShare = "glyphicon-share";
	const GlyphiconCheck = "glyphicon-check";
	const GlyphiconMove = "glyphicon-move";
	const GlyphiconStepBackward = "glyphicon-step-backward";
	const GlyphiconFastBackward = "glyphicon-fast-backward";
	const GlyphiconBackward = "glyphicon-backward";
	const GlyphiconPlay = "glyphicon-play";
	const GlyphiconPause = "glyphicon-pause";
	const GlyphiconStop = "glyphicon-stop";
	const GlyphiconForward = "glyphicon-forward";
	const GlyphiconFastForward = "glyphicon-fast-forward";
	const GlyphiconStepForward = "glyphicon-step-forward";
	const GlyphiconEject = "glyphicon-eject";
	const GlyphiconChevronLeft = "glyphicon-chevron-left";
	const GlyphiconChevronRight = "glyphicon-chevron-right";
	const GlyphiconPlusSign = "glyphicon-plus-sign";
	const GlyphiconMinusSign = "glyphicon-minus-sign";
	const GlyphiconRemoveSign = "glyphicon-remove-sign";
	const GlyphiconOkSign = "glyphicon-ok-sign";
	const GlyphiconQuestionSign = "glyphicon-question-sign";
	const GlyphiconInfoSign = "glyphicon-info-sign";
	const GlyphiconScreenshot = "glyphicon-screenshot";
	const GlyphiconRemoveCircle = "glyphicon-remove-circle";
	const GlyphiconOkCircle = "glyphicon-ok-circle";
	const GlyphiconBanCircle = "glyphicon-ban-circle";
	const GlyphiconArrowLeft = "glyphicon-arrow-left";
	const GlyphiconArrowRight = "glyphicon-arrow-right";
	const GlyphiconArrowUp = "glyphicon-arrow-up";
	const GlyphiconArrowDown = "glyphicon-arrow-down";
	const GlyphiconShareAlt = "glyphicon-share-alt";
	const GlyphiconResizeFull = "glyphicon-resize-full";
	const GlyphiconResizeSmall = "glyphicon-resize-small";
	const GlyphiconExclamationSign = "glyphicon-exclamation-sign";
	const GlyphiconGift = "glyphicon-gift";
	const GlyphiconLeaf = "glyphicon-leaf";
	const GlyphiconFire = "glyphicon-fire";
	const GlyphiconEyeOpen = "glyphicon-eye-open";
	const GlyphiconEyeClose = "glyphicon-eye-close";
	const GlyphiconWarningSign = "glyphicon-warning-sign";
	const GlyphiconPlane = "glyphicon-plane";
	const GlyphiconCalendar = "glyphicon-calendar";
	const GlyphiconRandom = "glyphicon-random";
	const GlyphiconComment = "glyphicon-comment";
	const GlyphiconMagnet = "glyphicon-magnet";
	const GlyphiconChevronUp = "glyphicon-chevron-up";
	const GlyphiconChevronDown = "glyphicon-chevron-down";
	const GlyphiconRetweet = "glyphicon-retweet";
	const GlyphiconShoppingCart = "glyphicon-shopping-cart";
	const GlyphiconFolderClose = "glyphicon-folder-close";
	const GlyphiconFolderOpen = "glyphicon-folder-open";
	const GlyphiconResizeVertical = "glyphicon-resize-vertical";
	const GlyphiconResizeHorizontal = "glyphicon-resize-horizontal";
	const GlyphiconHdd = "glyphicon-hdd";
	const GlyphiconBullhorn = "glyphicon-bullhorn";
	const GlyphiconBell = "glyphicon-bell";
	const GlyphiconCertificate = "glyphicon-certificate";
	const GlyphiconThumbsUp = "glyphicon-thumbs-up";
	const GlyphiconThumbsDown = "glyphicon-thumbs-down";
	const GlyphiconHandRight = "glyphicon-hand-right";
	const GlyphiconHandLeft = "glyphicon-hand-left";
	const GlyphiconHandUp = "glyphicon-hand-up";
	const GlyphiconHandDown = "glyphicon-hand-down";
	const GlyphiconCircleArrowRight = "glyphicon-circle-arrow-right";
	const GlyphiconCircleArrowLeft = "glyphicon-circle-arrow-left";
	const GlyphiconCircleArrowUp = "glyphicon-circle-arrow-up";
	const GlyphiconCircleArrowDown = "glyphicon-circle-arrow-down";
	const GlyphiconGlobe = "glyphicon-globe";
	const GlyphiconWrench = "glyphicon-wrench";
	const GlyphiconTasks = "glyphicon-tasks";
	const GlyphiconFilter = "glyphicon-filter";
	const GlyphiconBriefcase = "glyphicon-briefcase";
	const GlyphiconFullscreen = "glyphicon-fullscreen";
	const GlyphiconDashboard = "glyphicon-dashboard";
	const GlyphiconPaperclip = "glyphicon-paperclip";
	const GlyphiconHeartEmpty = "glyphicon-heart-empty";
	const GlyphiconLink = "glyphicon-link";
	const GlyphiconPhone = "glyphicon-phone";
	const GlyphiconPushpin = "glyphicon-pushpin";
	const GlyphiconUsd = "glyphicon-usd";
	const GlyphiconGbp = "glyphicon-gbp";
	const GlyphiconSort = "glyphicon-sort";
	const GlyphiconSortByAlphabet = "glyphicon-sort-by-alphabet";
	const GlyphiconSortByAlphabetAlt = "glyphicon-sort-by-alphabet-alt";
	const GlyphiconSortByOrder = "glyphicon-sort-by-order";
	const GlyphiconSortByOrderAlt = "glyphicon-sort-by-order-alt";
	const GlyphiconSortByAttributes = "glyphicon-sort-by-attributes";
	const GlyphiconSortByAttributesAlt = "glyphicon-sort-by-attributes-alt";
	const GlyphiconUnchecked = "glyphicon-unchecked";
	const GlyphiconExpand = "glyphicon-expand";
	const GlyphiconCollapseDown = "glyphicon-collapse-down";
	const GlyphiconCollapseUp = "glyphicon-collapse-up";
	const GlyphiconLogIn = "glyphicon-log-in";
	const GlyphiconFlash = "glyphicon-flash";
	const GlyphiconLogOut = "glyphicon-log-out";
	const GlyphiconNewWindow = "glyphicon-new-window";
	const GlyphiconRecord = "glyphicon-record";
	const GlyphiconSave = "glyphicon-save";
	const GlyphiconOpen = "glyphicon-open";
	const GlyphiconSaved = "glyphicon-saved";
	const GlyphiconImport = "glyphicon-import";
	const GlyphiconExport = "glyphicon-export";
	const GlyphiconSend = "glyphicon-send";
	const GlyphiconFloppyDisk = "glyphicon-floppy-disk";
	const GlyphiconFloppySaved = "glyphicon-floppy-saved";
	const GlyphiconFloppyRemove = "glyphicon-floppy-remove";
	const GlyphiconFloppySave = "glyphicon-floppy-save";
	const GlyphiconFloppyOpen = "glyphicon-floppy-open";
	const GlyphiconCreditCard = "glyphicon-credit-card";
	const GlyphiconTransfer = "glyphicon-transfer";
	const GlyphiconCutlery = "glyphicon-cutlery";
	const GlyphiconHeader = "glyphicon-header";
	const GlyphiconCompressed = "glyphicon-compressed";
	const GlyphiconEarphone = "glyphicon-earphone";
	const GlyphiconPhoneAlt = "glyphicon-phone-alt";
	const GlyphiconTower = "glyphicon-tower";
	const GlyphiconStats = "glyphicon-stats";
	const GlyphiconSdVideo = "glyphicon-sd-video";
	const GlyphiconHdVideo = "glyphicon-hd-video";
	const GlyphiconSubtitles = "glyphicon-subtitles";
	const GlyphiconSoundStereo = "glyphicon-sound-stereo";
	const GlyphiconSoundDolby = "glyphicon-sound-dolby";
	const GlyphiconSound51 = "glyphicon-sound-5-1";
	const GlyphiconSound61 = "glyphicon-sound-6-1";
	const GlyphiconSound71 = "glyphicon-sound-7-1";
	const GlyphiconCopyrightMark = "glyphicon-copyright-mark";
	const GlyphiconRegistrationMark = "glyphicon-registration-mark";
	const GlyphiconCloudDownload = "glyphicon-cloud-download";
	const GlyphiconCloudUpload = "glyphicon-cloud-upload";
	const GlyphiconTreeConifer = "glyphicon-tree-conifer";
	const GlyphiconTreeDeciduous = "glyphicon-tree-deciduous";
	const GlyphiconCd = "glyphicon-cd";
	const GlyphiconSaveFile = "glyphicon-save-file";
	const GlyphiconOpenFile = "glyphicon-open-file";
	const GlyphiconLevelUp = "glyphicon-level-up";
	const GlyphiconCopy = "glyphicon-copy";
	const GlyphiconPaste = "glyphicon-paste";
	const GlyphiconDoor = "glyphicon-door";
	const GlyphiconKey = "glyphicon-key";
	const GlyphiconAlert = "glyphicon-alert";
	const GlyphiconEqualizer = "glyphicon-equalizer";
	const GlyphiconKing = "glyphicon-king";
	const GlyphiconQueen = "glyphicon-queen";
	const GlyphiconPawn = "glyphicon-pawn";
	const GlyphiconBishop = "glyphicon-bishop";
	const GlyphiconKnight = "glyphicon-knight";
	const GlyphiconBabyFormula = "glyphicon-baby-formula";
	const GlyphiconTent = "glyphicon-tent";
	const GlyphiconBlackboard = "glyphicon-blackboard";
	const GlyphiconBed = "glyphicon-bed";
	const GlyphiconApple = "glyphicon-apple";
	const GlyphiconErase = "glyphicon-erase";
	const GlyphiconHourglass = "glyphicon-hourglass";
	const GlyphiconLamp = "glyphicon-lamp";
	const GlyphiconDuplicate = "glyphicon-duplicate";
	const GlyphiconPiggyBank = "glyphicon-piggy-bank";
	const GlyphiconScissors = "glyphicon-scissors";
	const GlyphiconBitcoin = "glyphicon-bitcoin";
	const GlyphiconYen = "glyphicon-yen";
	const GlyphiconRuble = "glyphicon-ruble";
	const GlyphiconScale = "glyphicon-scale";
	const GlyphiconIceLolly = "glyphicon-ice-lolly";
	const GlyphiconIceLollyTasted = "glyphicon-ice-lolly-tasted";
	const GlyphiconEducation = "glyphicon-education";
	const GlyphiconOptionHorizontal = "glyphicon-option-horizontal";
	const GlyphiconOptionVertical = "glyphicon-option-vertical";
	const GlyphiconMenuHamburger = "glyphicon-menu-hamburger";
	const GlyphiconModalWindow = "glyphicon-modal-window";
	const GlyphiconOil = "glyphicon-oil";
	const GlyphiconGrain = "glyphicon-grain";
	const GlyphiconSunglasses = "glyphicon-sunglasses";
	const GlyphiconTextSize = "glyphicon-text-size";
	const GlyphiconTextColor = "glyphicon-text-color";
	const GlyphiconTextBackground = "glyphicon-text-background";
	const GlyphiconObjectAlignTop = "glyphicon-object-align-top";
	const GlyphiconObjectAlignBottom = "glyphicon-object-align-bottom";
	const GlyphiconObjectAlignHorizontal = "glyphicon-object-align-horizontal";
	const GlyphiconObjectAlignLeft = "glyphicon-object-align-left";
	const GlyphiconObjectAlignVertical = "glyphicon-object-align-vertical";
	const GlyphiconObjectAlignRight = "glyphicon-object-align-right";
	const GlyphiconTriangleRight = "glyphicon-triangle-right";
	const GlyphiconTriangleLeft = "glyphicon-triangle-left";
	const GlyphiconTriangleBottom = "glyphicon-triangle-bottom";
	const GlyphiconTriangleTop = "glyphicon-triangle-top";
	const GlyphiconConsole = "glyphicon-console";
	const GlyphiconSuperscript = "glyphicon-superscript";
	const GlyphiconSubscript = "glyphicon-subscript";
	const GlyphiconMenuLeft = "glyphicon-menu-left";
	const GlyphiconMenuRight = "glyphicon-menu-right";
	const GlyphiconMenuDown = "glyphicon-menu-down";
	const GlyphiconMenuUp = "glyphicon-menu-up";

	/** Containers */
	const Container = "container";
	const ContainerFluid = "container-fluid";

	/** Sizes */
	const ExtraSmall = "xs";	// <768 px width
	const Small = "sm";			// <992
	const Medium = "md";		// <1200
	const Large = "lg";			// > 1200
	const PrintSize = "print";	// printing only

	/** Text Classes */
	const TextLeft = "text-left";
	const TextCenter = "text-center";
	const TextRight = "text-right";
	const TextJustify = "text-justify";
	const TextNowrap = "text-nowrap";

	const TextLowercase = "text-lowercase";
	const TextUppercase = "text-uppercase";
	const TextCapitalize = "text-capitalize";

	const TextMuted = "text-muted";
	const TextPrimary = "text-primary";
	const TextSuccess = "text-success";
	const TextInfo = "text-info";
	const TextWarning = "text-warning";
	const TextDanger = "text-danger";

	/** List Classes */
	const ListUnstyled = "list-unstyled";
	const ListInline = "list-inline";

	/** Table Classes */
	const Table = "table";
	const TableStriped = "table-striped";
	const TableBordered = "table-bordered";
	const TableHover = "table-hover";
	const TableCondensed = "table-condensed";
	const TableResponsive = "table-responsive";

	/** Contextual Classes */
	const Active = "active";
	const Success = "success";
	const Warning = "warning";
	const Danger = "danger";
	const Info = "info";

	/** Forms */
	const FormGroup = "form-group";
	const FormInline = "form-inline";
	const FormHorizontal = "form-horizontal";
	const FormControl = "form-control";
	const FormControlStatic = "form-control-static";
	const FormControlFeedback = "form-control-feedback";

	/** Heights within a form group */
	const FormGroupLarge = "form-group-lg";
	const FormGroupSmall = "form-group-sm";

	const InputGroup = "input-group";
	const InputGroupAddon = "input-group-addon";
	const InputGroupLarge = "input-group-lg";
	const InputGroupMedium = ""; // default
	const InputGroupSmall = "input-group-sm";

	const InputLarge = "input-lg";
	const InputSmall = "input-sm";

	const Button = "btn";
	const ButtonDefault = "btn-default";
	const ButtonPrimary = "btn-primary";
	const ButtonSuccess = "btn-success";
	const ButtonInfo = "btn-info";
	const ButtonWarning = "btn-warning";
	const ButtonDanger = "btn-danger";
	const ButtonLink = "btn-link";
	const ButtonLarge = "btn-lg";
	const ButtonMedium = ""; // default
	const ButtonSmall = "btn-sm";
	const ButtonExtraSmall = "btn-xs";

	const Checkbox = "checkbox";
	const CheckboxInline = 'checkbox-inline';
	const RadioInline = 'radio-inline';


	const ControlLabel = "control-label";

	const HasWarning = "has-warning";
	const HasError = "has-error";
	const HasSuccess = "has-success";
	const HasFeedback = "has-feedback"; // feedback icon will be included

	const Glyphicon = "glyphicon";
	const CloseIcon = "close";
	const CaretIcon = "caret";

	const ScreenReaderOnly = "sr-only"; // class to only use this object in screen readers, and hide for everyone else
	const ScreenReaderFocusable = "sr-only-focusable";

	/** Backgrounds */
	const BackgroundPrimary="bg-primary";
	const BackgroundSuccess="bg-success";
	const BackgroundInfo="bg-info";
	const BackgroundWarning="bg-warning";
	const BackgroundDanger="bg-danger";

	/** Alignment */
	const PullLeft = 'pull-left';
	const PullRight = 'pull-right';
	const CenterBlock = 'center-block';

	/** Toggling */
	const Hidden = 'hidden';
	const Visible = 'visible';

	const Block = 'block';
	const Inline = 'inline';
	const InlineBlock = 'inline-block';

	/** Nav */

	const Nav = "nav";
	const NavTabs = "nav-tabs";
	const NavPills = "nav-pills";
	const NavJustified = "nav-justified";

	/** Navbar */

	const Navbar = 'nabar';

	const NavbarDefault = 'navbar-default';	// black on white
	const NavbarInverse = 'navbar-inverse'; // white on black

	const NavbarHeader = 'navbar-header';
	const NavbarCollapse = 'navbar-collapse';

	const NavbarBrand = 'navbar-brand';
	const NavbarToggle = 'navbar-toggle';

	const NavbarNav = 'navbar-nav';

	const NavbarLeft = 'navbar-left';
	const NavbarRight = 'navbar-right';
	const NavbarForm = 'navbar-form';

	/* Panels */
	const Panel = 'panel';
	const PanelDefault = 'panel-default';
	const PanelPrimary = 'panel-primary';
	const PanelWarning = 'panel-warning';
	const PanelDanger = 'panel-danger';
	const PanelSuccess = 'panel-success';
	const PanelInfo = 'panel-info';
	const PanelHeading = 'panel-heading';
	const PanelTitle = 'panel-title';
	const PanelCollapse = 'panel-collapse';
	const PanelBody = 'panel-body';
	const PanelFooter = 'panel-footer';
	const PanelGroup = 'panel-group';

	/* Alerts */
	const Alert = 'alert';
	const AlertSuccess = 'alert-success';
	const AlertInfo = 'alert-info';
	const AlertWarning = 'alert-warning';
	const AlertDanger = 'alert-danger';
	const AlertDismissable = 'alert-dismissable';

	/** Misc */
	const Row = 'row';
	const ClearFix = 'clearfix';
	const TextHide = 'text-hide';

	/** Modal */
	const ModalLarge = 'modal-lg';
	const ModalSmall = 'modal-sm';




	/** Utility methods */

	/**
	 * Builds a class used for toggling the visibility of content at different breakpoints.
	 *
	 * @param $blnVisible	True if this is one that shows object. False for a hidden object
	 * @param $strDeviceSize One of xs, sm, md, lg or print
	 * @param null $strDisplayType block, inline-block or inline
	 * @return string
	 */
	public static function CreateVisibilityClass ($blnVisible, $strDeviceSize, $strDisplayType = null) {
		$strClass = $blnVisible ? Bootstrap::Visible : Bootstrap::Hidden;
		$strClass .= '-' . $strDeviceSize;
		if ($blnVisible) {
			assert ($strDisplayType);
			$strClass .= $strDisplayType;
		}
		return $strClass;
	}

	/**
	 * Creates a column class for sizing a column at a certain breakpoint.
	 *
	 * @param $strDeviceSize
	 * @param int $intColumns
	 * @param int $intOffset
	 * @param int $intPush
	 * @return string
	 */
	public static function CreateColumnClass ($strDeviceSize, $intColumns = 0, $intOffset = 0, $intPush = 0) {
		$strClass = '';
		if ($intColumns) {
			$strClass = 'col-' . $strDeviceSize . '-' . $intColumns . ' ';
		}

		if ($intOffset) {
			$strClass .= 'col-' . $strDeviceSize . '-offset-' . $intOffset . ' ';
		}

		if ($intPush) {
			if ($intPush > 0) {
				$strClass .= 'col-' . $strDeviceSize . '-push-' . $intPush;
			} else {
				$strClass .= 'col-' . $strDeviceSize . '-pull-' . -$intPush;
			}
		}
		return trim ($strClass);
	}

	/**
	 * Given a Bootstrap::Glyph* icon value, will output the html for that icon.
	 *
	 * @param string $strIcon
	 * @param string|null $strDescription Alternate description for screen readers
	 * @return string
	 */
	public static function CreateGlyphHtml ($strIcon, $strDescription = null) {
		$strToReturn = sprintf ('<span class="glyphicon %s" aria-hidden="true"></span>', $strIcon);
		if ($strDescription) {
			$strToReturn .= sprintf ('<span class="sr-only">%s</span>', $strDescription);
		}
		return $strToReturn;
	}

	/**
	 * Load the javascript files required for bootstrap compatibility with qcubed. This should be called by bootstrap
	 * widgets that depend on the bootstrap javascript.
	 *
	 * If you are using bootstrap on forms that do not include the bootstrap widgets
	 * in this plugin, then the code below will not be executed to load the bootstrap js file on those forms. You
	 * should instead include both files below in your QForm javascript files to auto load by overloading
	 * GetFormJavaScripts in your QForm class.
	 */
	public static function LoadJS($objControl) {
		$objControl->AddJavascriptFile('/' . __BOOTSTRAP_JS__);
		$objControl->AddPluginJavascriptFile('bootstrap', 'qshim.js'); // for jquery ui compatibility

	}
} 